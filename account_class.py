from eth_account import Account  #Importing Account from the eth_account module of Web3.py
import secrets

class Account():
    def __init__(self, priv_key, walletID):
        self.priv_key = priv_key
        self.walletID = walletID

    private = secrets.token_hex(32)  #Ethereum address has to be formated as hex- 32bytes.
    priv_key = "0x" + private # After formatting, it is then converted to a string with the '0x' prefix being discarded.
    print ("Private key:", priv_key)

#create wallet ID
    for arrayitem in range(3):
        global Wallet
        addr = Account.from_key(priv_key) # Creating a new account using the private_key and storing it in variable addr.
        while arrayitem < 3: # While loop has been introduced to test and prove that no more than one address can be generated by one private key.
            arrayitem += 1
            print(({arrayitem}), "Wallet ID:", addr.address)
        break


# Balance Object Not Included.

# 1. This Certificate Management System is used to simply manage certificate and not carry out any financial transactions such as payments to be done.
# 2. However, wallet is required for key storage. The key used to generate digital certificate.
# 3. This program will  therefore not have a function to calculate balance in the wallet.








